Writing a good commit message
=============================

Unless you're still FTPing your code to a production server, chances are that you're storing code in a source control system like [git][] or [subversion][]. That means that you're committing, and *that* means that you're writing commit messages. It might not be obvious to some people, but these commit messages are a valuable mechanism for communicating with anyone else who needs to deal with your code (like your [team members][gofreerange]), so it's worth spending some time when you write them to make them useful.

Describe *something*
--------------------

I'm sure everyone has come across a commit message like this: 

> fixed a bug.

I sympathise with the author - it's likely that they've just spent an entire afternoon tracing an obscure and hard-to-replicate bug, and barely has enough energy to hit enter at the end of it.


Describe the problem first
It's 

Reveal your intentions, donâ€™t describe what the code does. Tell why it does it: http://wildbit.com/blog/2008/11/11/the-importance-of-commit-messages/
Justify why you chose the particular solution: http://wiki.github.com/erlang/otp/writing-good-commit-messages
actually formatting the message: http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html


[git]: http://gitscm.com
[subversion]: http://subversion.org
[gofreerange]: http://gofreerange.com


:render_as: Markdown
:kind: blog
:author: James Adam