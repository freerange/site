What does "heavyweight" mean?
=============================

One of the big problems that the Ruby Community suffers from at the moment is relentless reinvention. We could write a book about this condition, but for the moment it is interesting to look at one of the specific symptoms - the perception of code "weight".

It's not unusual for developers to [describe a library as "lightweight"][lightweight search]. This is universally seen as a positive attribute, meaning: simple, elegant, easy to use, fast, maybe even new. On the other hand, a heavy chunk of code is larger, maybe bloated, clunky, slow, hard to understand and employ, and will drag you down with it as it sinks to the bottom of your code soup.

Urgh, Java is so heavyweight! It takes so long to start up! Rails has so much code in it compared to the lightweight Sinatra, I don't want all that code! Capistrano is so heavy compared to this really simple git-deploy script! I chose lightweight!

Bunk.

Our perception of code as heavy is just a reflection of our own lack of understanding combined with our reluctance to learn.

"too hard to set up" - build your own better abstractions
"can do lots of stuff I don't need"
"creates so many files" -


"Library X seemed too complicated so I built my own little tool that does what I wanted, it's lightweight and so you should use it too"...

What we should be aiming for are abstraction sweet-spots and libraries that are clear and well tested.



[lightweight search]: https://github.com/search?q=lightweight&type=Everything&repo=&langOverride=&start_value=1 "As of today there are 1365 projects on Github that self-describe as 'lightweight'"

:render_as: Blog
:written_with: markdown
:kind: blog
:draft: true
:author: james-adam
